import React, { useMemo, useState, useEffect } from "react";
<tr>
<th className="text-left p-2 border">Fecha</th>
<th className="text-left p-2 border">Cliente</th>
<th className="text-left p-2 border">Ítems</th>
<th className="text-left p-2 border">Impreso</th>
<th className="text-left p-2 border">Acciones</th>
</tr>
</thead>
<tbody>
{orders.map((o) => (
<tr key={o.id} className="hover:bg-gray-50">
<td className="p-2 border whitespace-nowrap">{formatDate(o.createdAt)}</td>
<td className="p-2 border">
<div className="font-medium">{o.customer.name}</div>
<div className="text-xs text-gray-500">{o.customer.code}</div>
</td>
<td className="p-2 border">{o.items.map((i) => `${i.product} x${i.qty}`).join(" | ")}</td>
<td className="p-2 border">{o.printed ? "Sí" : "No"}</td>
<td className="p-2 border">
<div className="flex flex-wrap gap-2">
<button className="px-2 py-1 rounded-lg border" onClick={() => setPreview(o)}>Ver</button>
<button className="px-2 py-1 rounded-lg border" onClick={() => printOrder(o)}>Imprimir</button>
{adminMode && (
<button className="px-2 py-1 rounded-lg border" onClick={() => deleteOrder(o.id)}>Eliminar</button>
)}
{adminMode && (
<button className="px-2 py-1 rounded-lg border" onClick={() => {
setOrders((prev)=>prev.map((x)=> x.id===o.id ? { ...x, printed: !x.printed } : x));
}}>{o.printed ? "Desmarcar" : "Marcar impreso"}</button>
)}
</div>
</td>
</tr>
))}
</tbody>
</table>
</div>
)}
</section>
</main>


<footer className="max-w-6xl mx-auto px-4 py-8 text-xs text-gray-500">
<p>
Esta es una réplica ligera (front‑end) que guarda los pedidos en tu navegador (localStorage). Para multiusuario o base de datos real, puedo conectarlo a Google Sheets, Supabase o Firebase cuando lo necesites.
</p>
</footer>


{preview && (
<OrderPreview
order={preview}
onClose={() => setPreview(null)}
onPrint={() => printOrder(preview)}
onMarkPrinted={() => {
setOrders((prev)=>prev.map((x)=> x.id===preview.id ? { ...x, printed: true } : x));
}}
/>
)}
</div>
);
}
